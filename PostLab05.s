;Archivo:		PostLab05.s
;Dispositivo:		PIC16F887
;Autor:			Marian López
;Programa:		Contador 8 bits mostrado en 3 displays de 
;			7 segmentos por unidades, decenas, centenas    
;Hardware:	        8 LEDs en puerto A
;			2 push-buttons en puerto B
;			3 displays de 7 segmentos en puerto C
;			Circuitos selectores en RD0, RD1 Y RD2
;Creado:		24 febrero, 2022
;Última modificación:	25 febrero, 2022

PROCESSOR 16F887
    
; CONFIG1
  CONFIG  FOSC = INTRC_NOCLKOUT ; Oscillator Selection bits (INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O function on RA7/OSC1/CLKIN)
  CONFIG  WDTE = OFF            ; Watchdog Timer Enable bit (WDT disabled and can be enabled by SWDTEN bit of the WDTCON register)
  CONFIG  PWRTE = ON            ; Power-up Timer Enable bit (PWRT enabled)
  CONFIG  MCLRE = OFF           ; RE3/MCLR pin function select bit (RE3/MCLR pin function is digital input, MCLR internally tied to VDD)
  CONFIG  CP = OFF              ; Code Protection bit (Program memory code protection is disabled)
  CONFIG  CPD = OFF             ; Data Code Protection bit (Data memory code protection is disabled)
  CONFIG  BOREN = OFF           ; Brown Out Reset Selection bits (BOR disabled)
  CONFIG  IESO = OFF            ; Internal External Switchover bit (Internal/External Switchover mode is disabled)
  CONFIG  FCMEN = OFF           ; Fail-Safe Clock Monitor Enabled bit (Fail-Safe Clock Monitor is disabled)
  CONFIG  LVP = ON              ; Low Voltage Programming Enable bit (RB3/PGM pin has PGM function, low voltage programming enabled)

; CONFIG2
  CONFIG  BOR4V = BOR40V        ; Brown-out Reset Selection bit (Brown-out Reset set to 4.0V)
  CONFIG  WRT = OFF             ; Flash Program Memory Self Write Enable bits (Write protection off)

// config statements should precede project file includes.
#include <xc.inc>

; MACROS
RESET_TMR0 MACRO TMR_VAR	; FUNCIÓN QUE RESETEA EL TMR0 CON CUALQUIER VALOR
    BANKSEL TMR0		
    MOVLW   TMR_VAR
    MOVWF   TMR0		; TIEMPO DE RETARDE
    BCF	    T0IF		; LIMPIA BANDERA DE INTERRUPCIÓN
    ENDM
  
; VARIALBES EN MEMORIA
PSECT udata_shr			; MEMORIA COMPARTIDA
    W_TEMP:	    DS 1
    STATUS_TEMP:    DS 1

PSECT udata_bank0		; MEMORIA DE BANCO 0
    CERO:	    DS 1	; INDICA QUE EL DIVIDENDO ES CERO
    DIVIDENDO:	    DS 1	; GUARDA VALOR DEL PUERTO A PARA DIVIDIR
    CENTENAS:	    DS 1
    DECENAS:	    DS 1
    UNIDADES:	    DS 1
    BANDERAS:	    DS 3	; INDICA QUÉ DISPLAY ESTÁ ENCENDIDO
    DISPLAY:	    DS 3	; GUARDA VALORES BINARIOS RECUPERADOS DE TABLA

; VECTOR RESET
PSECT RESVECT, CLASS=CODE, ABS, DELTA=2
ORG 00H				; POSICIÓN 00H PARA EL RESET
RESETVECT:
    PAGESEL MAIN
    GOTO MAIN
    
; VECTOR INTERRUPCIONES
PSECT INTVECT, CLASS=CODE, ABS, DELTA=2
ORG 04H
PUSH:
    MOVWF   W_TEMP		; GUARDA W
    SWAPF   STATUS, W		; PARA QUE NO AFECTE LAS BANDERAS
    MOVWF   STATUS_TEMP		; GUARDA STATUS
    
ISR:
    RESET_TMR0 217		; REINICIA TMR0 PARA 10 MS  
    CALL    MOSTRAR_VALOR	; PRENDE SIGUIENTE DISPLAY
    
POP:
    SWAPF   STATUS_TEMP, W  
    MOVWF   STATUS		; RECUPERA EL VALOR DE STATUS
    SWAPF   W_TEMP, F	    
    SWAPF   W_TEMP, W		; RECUPERA VALOR DE W
    RETFIE

; CÓDIGO
PSECT CODE, DELTA=2, ABS
ORG 80H				; POSICIÓN PARA EL CÓDIGO

; CONFIGURACION DEL UC
MAIN:
    CALL    CONFIG_IO
    CALL    CONFIG_RELOJ	
    CALL    CONFIG_TMR0		
    CALL    CONFIG_INT	
    
; LOOP PRINCIPAL
LOOP:
    CALL    CLR_VARIABLES
    CALL    CONTADOR
    CALL    EVALUAR_CERO
    BTFSC   CERO, 0
    GOTO    $+4			; SI VARIABLE CERO ES 1 MUESTRA VALORES EN DISPLAY
    CALL    EVALUAR_CENTENAS
    CALL    EVALUAR_DECENAS
    CALL    EVALUAR_UNIDADES
    CALL    SET_DISPLAY
    GOTO    LOOP
    
; SUBRUTINAS
CONFIG_IO:
    BANKSEL ANSEL
    CLRF    ANSEL		; PINES DIGITALES	
    CLRF    ANSELH		; PINES DIGITALES
    BANKSEL TRISA
    CLRF    TRISA		; PORTA COMO SALIDA
    BSF	    TRISB, 0		; RB0 COMO ENTRADA
    BSF	    TRISB, 1		; RB1 COMO ENTRADA
    CLRF    TRISC		; PORTC COMO SALIDA
    CLRF    TRISD		; PORTD COMO SALIDA
    BANKSEL PORTA
    CLRF    PORTA		; PORTA EN 0
    BCF     PORTB, 0		; RB0 EN 0
    BCF     PORTB, 1		; RB1 EN 0
    MOVLW   0xFF
    MOVWF   PORTC		; PRENDE PORTC (APAGA DISPLAY ÁNODO COMÚN) 
    BSF     PORTD, 0		; RB0 EN 1
    BSF     PORTD, 1		; RB1 EN 1
    BSF     PORTD, 2		; RB1 EN 1 (APAGA DISPLAY ÁNODO COMÚN)
    RETURN
    
CONFIG_RELOJ:
    BANKSEL OSCCON
    BCF	    SCS			; RELOJ INTERNO
    BSF	    IRCF2		; IRCF2
    BSF	    IRCF1		; IRCF1
    BCF	    IRCF0		; IRCF0 -> IRCF<2:0> = 110 -> 4 MHz 
    RETURN

CONFIG_TMR0:
    BANKSEL OPTION_REG
    BCF	    T0CS		; INCREMENTO CON PULSOS DE RELOJ INTERNO
    BCF	    PSA			; PRESCALER A TMR0
    BSF	    PS2
    BSF	    PS1
    BSF	    PS0			; PRESCALER 1 : 256
    RESET_TMR0 217
    RETURN

CONFIG_INT:
    BANKSEL INTCON
    BSF	    GIE			; INTERRUPCIONES GLOBALES HABILITADAS
    BSF	    T0IE		; INTERRUPCIÓN TMR0 HABILITADA
    BCF	    T0IF		; LIMPIA BANDERA DE DESBORDAMIENTO DE TMR0
    RETURN
    
CLR_VARIABLES:
    CLRF    CERO
    CLRF    DIVIDENDO
    CLRF    CENTENAS
    CLRF    DECENAS
    CLRF    UNIDADES
    RETURN
    
INC_CONTADOR:
    BTFSS   PORTB, 0
    GOTO    $-1			; ESPERA A QUE SE SUELTE EL PUSH-BUTTON
    INCF    PORTA, 1		; INCREMENTA
    RETURN
    
DEC_CONTADOR:
    BTFSS   PORTB, 1
    GOTO    $-1			; ESPERA A QUE SE SUELTE EL PUSH-BUTTON
    DECF    PORTA, 1		; DECREMENTA
    RETURN
    
CONTADOR:
    BANKSEL PORTB    
    BTFSS   PORTB, 0		; DECREMENTA SI PUSH-BUTTON 1 PRESIONADO  
    CALL    INC_CONTADOR
    BTFSS   PORTB, 1		; DECREMENTA SI PUSH-BUTTON 2 PRESIONADO
    CALL    DEC_CONTADOR
    MOVF    PORTA, W
    MOVWF   DIVIDENDO		; GUARDA VALOR DE CONTADOR EN VARIABLE DIVIDENDO
    RETURN

EVALUAR_CERO:
    MOVF    DIVIDENDO, F
    BTFSS   STATUS, 2		; SI DIVIDENDO ES CERO SALTA
    GOTO    $+6			; TERMINA SUBRUTINA
    INCF    CERO		; VARIABLE CERO EN 1
    MOVLW   00000000B
    MOVWF   CENTENAS		; VARIABLE CENTENAS EN 0
    MOVWF   DECENAS		; VARIABLE DECENAS EN 0
    MOVWF   UNIDADES		; VARIABLE UNIDADES EN 0
    RETURN
    
EVALUAR_CENTENAS:
    MOVLW   100
    SUBWF   DIVIDENDO, F	; RESTA 100 DE DIVIDENDO
    BTFSS   STATUS, 0		; SI NO HAY CARRY, RESTA DA NEGATIVO Y SALE DE SUBRUTINA
    RETURN
    INCF    CENTENAS		; INCREMENTA VALOR DE CENTENAS
    GOTO    $-4			; VUELVE A EVALUAR CENTENAS
    
EVALUAR_DECENAS:
    MOVLW   100
    ADDWF   DIVIDENDO		; PARA VOLVER A TENER EL DIVIDENDO POSITIVO
    MOVLW   10
    SUBWF   DIVIDENDO, F	; RESTA 10 DE DIVIDENDO
    BTFSS   STATUS, 0		; SI NO HAY CARRY, RESTA DA NEGATIVO Y SALE SE SUBRUTINA
    RETURN
    INCF    DECENAS		; INCREMENTA VALOR DE DECENAS
    GOTO    $-4			; VUELVE A EVALUAR DECENAS
    
EVALUAR_UNIDADES:
    MOVLW   10
    ADDWF   DIVIDENDO		; PARA VOLVER A TENER EL DIVIDENDO POSITIVO
    MOVLW   1
    SUBWF   DIVIDENDO, F	; RESTA 1 DE DIVIDENDO
    BTFSS   STATUS, 0		; SI NO HAY CARRY, RESTA DA NEGATIVO Y SALE SE SUBRUTINA
    RETURN
    INCF    UNIDADES		; INCREMENTA VALOR DE UNIDADES
    GOTO    $-4			; VUELVE A EVALUAR UNIDADES

SET_DISPLAY:
    MOVF    UNIDADES, W
    CALL    TABLA_7SEG		; TRANSFORMA UNIDADES A BYTE PARA DISPLAY 1
    MOVWF   DISPLAY		; GUARDA BYTE EN VARIABLE DISPLAY
    MOVF    DECENAS, W	
    CALL    TABLA_7SEG		; TRANSFORMA DECENAS A BYTE PARA DISPLAY 2
    MOVWF   DISPLAY+1		; GUARDA BYTE EN VARIABLE DISPLAY+1    	
    MOVF    CENTENAS, W
    CALL    TABLA_7SEG		; TRANSFORMA CENTENAS A BYTE PARA DISPLAY 3
    MOVWF   DISPLAY+2		; GUARDA BYTE EN VARIABLE DISPLAY+2
    RETURN

MOSTRAR_VALOR:
    MOVLW   0x07		; TIENE QUE EMPEZAR ENCENDIDO PORQUE ASÍ EL TRANSISTOR
    MOVWF   PORTD		; CONECTA A TIERRA Y SE APAGA EL DISPLAY DE ÁNODO COMÚN
    BTFSC   BANDERAS, 0		; SI BANDERA ESTÁ ENCENDIDA ENTRA
    GOTO    DISPLAY_2
    BTFSC   BANDERAS+1, 0	; SI BANDERA+1 ESTÁ ENCENDIDA ENTRA
    GOTO    DISPLAY_3
    BTFSC   BANDERAS+2, 0	; SI BANDERA+2 ESTÁ ENCENDIDA ENTRA
    GOTO    DISPLAY_1
    ; MUESTRA UNIDADES EN DISPLAY 1
    DISPLAY_1:
	MOVF	DISPLAY, W
	MOVWF	PORTC		; COLOCA EL BYTE DE DISPLAY EN PUERTO C
	BCF	PORTD, 2	; APAGA RD2 PRENDIENDO DISPLAY 1
	BSF	BANDERAS, 0	; ENCIENDE BANDERAS
	BCF	BANDERAS+1, 0	; APAGA BANDERAS+1
	BCF	BANDERAS+2, 0	; APAGA BANDERAS+2
	RETURN
    ; MUESTRA DECENAS EN DISPLAY 2
    DISPLAY_2:
	MOVF	DISPLAY+1, W
	MOVWF	PORTC		; COLOCA EL BYTE DE DISPLAY EN PUERTO C
	BCF	PORTD, 1	; APAGA RD1 PREDIENDO DISPLAY 2
	BSF	BANDERAS+1, 0	; ENCIENDE BANDERAS+1
	BCF	BANDERAS, 0	; APAGA BANDERAS
	BCF	BANDERAS+2, 0	; APAGA BANDERAS+2
	RETURN
    ; MUESTRA UNIDADES EN DISPLAY 3
    DISPLAY_3:
	MOVF	DISPLAY+2, W
	MOVWF	PORTC		; COLOCA EL BYTE DE DISPLAY EN PUERTO C
	BCF	PORTD, 0	; APAGA RD0 PRENDIENDO DISPLAY 3
	BSF	BANDERAS+2, 0	; ENCIENDE BANDERS+2
	BCF	BANDERAS, 0	; APAGA BANDERAS
	BCF	BANDERAS+1, 0	; APAGA BANDERAS+1
	RETURN
	
; TABLA ÁNODO COMÚN
ORG 200H        		; POSICIÓN PARA LA TABLA DE DISPLAY
TABLA_7SEG:
    CLRF    PCLATH		; PCLATH = 00
    BSF	    PCLATH, 1		; PCLATH = 01
    ADDWF   PCL			; PC = PCLATH + PCL + W
    RETLW   11000000B		; 0
    RETLW   11111001B		; 1
    RETLW   10100100B		; 2
    RETLW   10110000B		; 3
    RETLW   10011001B		; 4
    RETLW   10010010B		; 5
    RETLW   10000010B		; 6
    RETLW   11111000B		; 7
    RETLW   10000000B		; 8
    RETLW   10010000B		; 9
    RETLW   10001000B		; A
    RETLW   10000011B		; B
    RETLW   11000110B		; C
    RETLW   10100001B		; D
    RETLW   10000110B		; E
    RETLW   10001110B		; F